# -*- coding: utf-8 -*-
"""python_ex02_oop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h7k2N69aauGEYZI9AOkA7XMlEcF9SIfA

**Zad 1. Budowa klasy**
"""

class Car:
    def __init__(self, make):
        self.make = make
        self.motor_run = False
        self.gear = 0
        self.speed = 0

    def motor_start(self):
        self.motor_run = True

    def motor_stop(self):
        self.motor_run = False

    def gear_change_up(self):
        if self.gear <= 7:
            self.gear+=1
        print(self.gear)

    def gear_change_down(self):
        if self.gear >= 0:
            self.gear-=1
        print(self.gear)

my_car = Car("Kia Sportage")
my_car.gear_change_up()
my_car.gear

"""**Zad 2. Hermetyzacja**"""

class Encapsulation:
    def __init__(self):
        self.public, self._protected, self.__private = 1, 2, 3

def main():
    encapsulation = Encapsulation()
    print(encapsulation.public)
    print(encapsulation._protected)
    print(encapsulation._Encapsulation__private)
# a teraz będzie błąd
    print(encapsulation.__private)

main()

class Car:
    def __init__(self, make):
        self.make = make
        self.__motor_run = False
        self.__gear = 0
        self.__speed = 0

    def motor_start(self):
        self.__motor_run = True

    def motor_stop(self):
        self.__motor_run = False

    def gear_change_up(self):
        if self.__gear <= 7:
            self.__gear+=1
        print(self.gear)

    def gear_change_down(self):
        if self.__gear >= 0:
            self.__gear-=1
        print(self.gear)

my_car = Car("Kia")
my_car.motor_start()
my_car.gear_change_down()
my_car.gear

"""**Zad 3. Pola statyczne. Metody statyczne.**"""

class Car:
    how_many = 0

    def __init__(self):
        Car.how_many += 1
        self.car_number = Car.how_many
        print(f"Number of car is equal to {self.car_number}")

    def __del__(self):
        Car.how_many -= 1

    @staticmethod
    def count_cars():
        return Car.how_many

car_1 = Car()
car_2 = Car()
car_3 = Car()
print(f"Total number of cars {Car.count_cars()}")
car_2 = None
print(f"Total number of cars {Car.count_cars()}")

"""**Zad 4. Dziedziczenie**"""

class Person:
    def __init__(self,name,surname,age):
        self.name = name
        self.surname = surname
        self.age = age

    def hasName(self):
        print("Has name")

class Student(Person):
    def __init__(self,name,surname,age,field_of_study):
        super().__init__(name,surname,age)
        self.field_of_study = field_of_study

    def isStudent(self):
        print("Is student")

person_1 = Person("Tom","Nowak",25)
student_1 = Student("Tom","Nowak",25,"Informatics")

student_1.hasName()